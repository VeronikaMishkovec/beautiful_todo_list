module.exports = {
  root: true,
  extends: [
    '@react-native-community',
    'prettier',
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:import/warnings',
    'plugin:import/errors',
    'plugin:react/recommended',
  ],
  parser: '@typescript-eslint/parser',
  plugins: ['sort-destructure-keys', '@typescript-eslint', 'import'],
  overrides: [
    {
      excludedFiles: ['*.test.ts', '*.test.tsx'],
      extends: [
        'plugin:import/typescript',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
        'plugin:prettier/recommended',
        'prettier',
      ],
      files: ['*.ts', '*.tsx'],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        project: ['./tsconfig.json'],
        tsconfigRootDir: __dirname,
      },
      plugins: ['@typescript-eslint', 'prettier'],
      rules: {
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/unbound-method': 'off',
      },
      settings: {
        'import/parsers': { '@typescript-eslint/parser': ['.ts', '.tsx'] },
        'import/resolver': { typescript: { alwaysTryTypes: true } },
      },
    },
    {
      extends: [
        'plugin:import/typescript',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
        'plugin:jest/recommended',
        'plugin:jest/style',
        'plugin:prettier/recommended',
        'prettier',
      ],
      files: ['*.test.ts', '*.test.tsx'],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        project: ['./tsconfig.json'],
        tsconfigRootDir: __dirname,
      },
      plugins: ['@typescript-eslint', 'jest', 'prettier'],
      settings: {
        'import/parsers': { '@typescript-eslint/parser': ['.ts', '.tsx'] },
        'import/resolver': { typescript: { alwaysTryTypes: true } },
      },
    },
    {
      extends: ['plugin:prettier/recommended'],
      files: ['*.js', '*.jsx'],
      parser: 'espree',
      plugins: ['prettier'],
    },
  ],
  rules: {
    'sort-destructure-keys/sort-destructure-keys': 2,
    'import/no-unresolved': 'error',
    'import/order': [
      'error',
      {
        alphabetize: { order: 'asc' },
        groups: [
          'builtin',
          'external',
          'internal',
          'parent',
          'sibling',
          'index',
          'object',
          'unknown',
        ],
        'newlines-between': 'always',
        pathGroups: [
          { group: 'builtin', pattern: 'react-native', position: 'before' },
          { group: 'builtin', pattern: 'react', position: 'before' },
        ],
        pathGroupsExcludedImportTypes: ['react', 'react-native'],
      },
    ],
    'prettier/prettier': 'error',
    'no-console': 'error',
    'sort-vars': 'error',
  },
};
